{"version":3,"sources":["../../../../../src/ngx-tree-select/src/models/select-option.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C;IAAA;QACS,eAAU,GAAG,IAAI,CAAC;QAClB,iBAAY,GAAG,MAAM,CAAC;QACtB,kBAAa,GAAW,IAAI,CAAC;QAC7B,kBAAa,GAAG,KAAK,CAAC;QACtB,qBAAgB,GAAG,IAAI,CAAC;QACxB,UAAK,GAAU,EAAE,CAAC;QAElB,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,EAAE,CAAC;QACZ,wBAAmB,GAAG,KAAK,CAAC;QAC5B,yBAAoB,GAAG,KAAK,CAAC;QAC7B,iCAA4B,GAAG,KAAK,CAAC;QAErC,eAAU,GAAG,UAAU,CAAC,IAAI,CAAC;IA0BtC,CAAC;IAxBQ,kCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IACpE,CAAC;IAED,sBAAW,0CAAgB;aAA3B;YACG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC;QACJ,CAAC;;;OAAA;IAEM,sCAAe,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;IAClD,CAAC;IAEM,8BAAO,GAAd;QACE,0BAA0B;QAC1B,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC;YACzD,4BAA4B;YAC5B,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC;YACxD,oBAAoB;YACpB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACrE,CAAC;IACH,mBAAC;AAAD,CAxCA,AAwCC,IAAA","file":"select-option.js","sourceRoot":"","sourcesContent":["import { ExpandMode } from './expand-mode';\n\nexport class SelectOption {\n  public idProperty = 'id';\n  public textProperty = 'text';\n  public childProperty: string = null;\n  public allowMultiple = false;\n  public closeOnSelection = true;\n  public items: any[] = [];\n  public model: any[] | any;\n  public isOpen = false;\n  public filter = '';\n  public filterCaseSensitive = false;\n  public allowParentSelection = false;\n  public restructureWhenChildSameName = false;\n  public maxVisibleItemCount: number;\n  public expandMode = ExpandMode.None;\n\n  public isHierarchy(): boolean {\n    return this.childProperty && this.childProperty.trim().length > 0;\n  }\n\n  public get filterExpandMode(): ExpandMode {\n     if (this.filter !== '') {\n        return ExpandMode.All;\n     } else {\n       return this.expandMode;\n     }\n  }\n\n  public displayCheckbox(): boolean {\n    return this.allowMultiple && this.isHierarchy();\n  }\n\n  public isValid(): boolean {\n    // Check id property value\n    return this.idProperty && this.idProperty.trim().length > 0 &&\n      // Check text property value\n      this.textProperty && this.textProperty.trim().length > 0 &&\n      // Check items value\n      this.items && Array.isArray(this.items) && this.items.length > 0;\n  }\n}\n"]}